import argparse
import torch

def get_parse():

    parser = argparse.ArgumentParser()
    parser.add_argument('--dataset', type=str, default="diversevul")
    parser.add_argument('--model', type=str, default="codebert-base")
    parser.add_argument('--use_data', type=str, default="code&message")  # code code&message 
    
    parser.add_argument('--max_length', type=int, default=512)   

    parser.add_argument('--batch_size', type=int, default=32, help='batch size')
    parser.add_argument('--epoch', type=int, default=5, help='the number of epochs to train for')
    parser.add_argument('--device', default='cuda', type=str,help='cuda or cpu')
    
    args = parser.parse_args()
    if args.device == 'cuda':
        args.device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
    else: args.device = torch.device('cpu')
    return args
